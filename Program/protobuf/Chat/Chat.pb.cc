// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chat.proto

#include "Chat.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class Chat_rfdrRRRReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Chat_rfdrRRRReq> _instance;
} _Chat_rfdrRRRReq_default_instance_;
class Chat_rfdrRRRReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Chat_rfdrRRRReply> _instance;
} _Chat_rfdrRRRReply_default_instance_;
static void InitDefaultsscc_info_Chat_rfdrRRRReply_Chat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Chat_rfdrRRRReply_default_instance_;
    new (ptr) ::Chat_rfdrRRRReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Chat_rfdrRRRReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Chat_rfdrRRRReply_Chat_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Chat_rfdrRRRReply_Chat_2eproto}, {}};

static void InitDefaultsscc_info_Chat_rfdrRRRReq_Chat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Chat_rfdrRRRReq_default_instance_;
    new (ptr) ::Chat_rfdrRRRReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Chat_rfdrRRRReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Chat_rfdrRRRReq_Chat_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Chat_rfdrRRRReq_Chat_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Chat_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Chat_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Chat_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Chat_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Chat_rfdrRRRReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Chat_rfdrRRRReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Chat_rfdrRRRReq)},
  { 5, -1, sizeof(::Chat_rfdrRRRReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Chat_rfdrRRRReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Chat_rfdrRRRReply_default_instance_),
};

const char descriptor_table_protodef_Chat_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nChat.proto\032\020PublicChat.proto\032\020PublicDa"
  "ta.proto\032\020PublicHaha.proto\"\021\n\017Chat_rfdrR"
  "RRReq\"\023\n\021Chat_rfdrRRRReplyb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Chat_2eproto_deps[3] = {
  &::descriptor_table_PublicChat_2eproto,
  &::descriptor_table_PublicData_2eproto,
  &::descriptor_table_PublicHaha_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Chat_2eproto_sccs[2] = {
  &scc_info_Chat_rfdrRRRReply_Chat_2eproto.base,
  &scc_info_Chat_rfdrRRRReq_Chat_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Chat_2eproto_once;
static bool descriptor_table_Chat_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Chat_2eproto = {
  &descriptor_table_Chat_2eproto_initialized, descriptor_table_protodef_Chat_2eproto, "Chat.proto", 114,
  &descriptor_table_Chat_2eproto_once, descriptor_table_Chat_2eproto_sccs, descriptor_table_Chat_2eproto_deps, 2, 3,
  schemas, file_default_instances, TableStruct_Chat_2eproto::offsets,
  file_level_metadata_Chat_2eproto, 2, file_level_enum_descriptors_Chat_2eproto, file_level_service_descriptors_Chat_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Chat_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Chat_2eproto), true);

// ===================================================================

void Chat_rfdrRRRReq::InitAsDefaultInstance() {
}
class Chat_rfdrRRRReq::_Internal {
 public:
};

Chat_rfdrRRRReq::Chat_rfdrRRRReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Chat_rfdrRRRReq)
}
Chat_rfdrRRRReq::Chat_rfdrRRRReq(const Chat_rfdrRRRReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Chat_rfdrRRRReq)
}

void Chat_rfdrRRRReq::SharedCtor() {
}

Chat_rfdrRRRReq::~Chat_rfdrRRRReq() {
  // @@protoc_insertion_point(destructor:Chat_rfdrRRRReq)
  SharedDtor();
}

void Chat_rfdrRRRReq::SharedDtor() {
}

void Chat_rfdrRRRReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Chat_rfdrRRRReq& Chat_rfdrRRRReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Chat_rfdrRRRReq_Chat_2eproto.base);
  return *internal_default_instance();
}


void Chat_rfdrRRRReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Chat_rfdrRRRReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Chat_rfdrRRRReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Chat_rfdrRRRReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Chat_rfdrRRRReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Chat_rfdrRRRReq)
  return target;
}

size_t Chat_rfdrRRRReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Chat_rfdrRRRReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Chat_rfdrRRRReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Chat_rfdrRRRReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Chat_rfdrRRRReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Chat_rfdrRRRReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Chat_rfdrRRRReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Chat_rfdrRRRReq)
    MergeFrom(*source);
  }
}

void Chat_rfdrRRRReq::MergeFrom(const Chat_rfdrRRRReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Chat_rfdrRRRReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Chat_rfdrRRRReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Chat_rfdrRRRReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Chat_rfdrRRRReq::CopyFrom(const Chat_rfdrRRRReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Chat_rfdrRRRReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chat_rfdrRRRReq::IsInitialized() const {
  return true;
}

void Chat_rfdrRRRReq::InternalSwap(Chat_rfdrRRRReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Chat_rfdrRRRReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Chat_rfdrRRRReply::InitAsDefaultInstance() {
}
class Chat_rfdrRRRReply::_Internal {
 public:
};

Chat_rfdrRRRReply::Chat_rfdrRRRReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Chat_rfdrRRRReply)
}
Chat_rfdrRRRReply::Chat_rfdrRRRReply(const Chat_rfdrRRRReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Chat_rfdrRRRReply)
}

void Chat_rfdrRRRReply::SharedCtor() {
}

Chat_rfdrRRRReply::~Chat_rfdrRRRReply() {
  // @@protoc_insertion_point(destructor:Chat_rfdrRRRReply)
  SharedDtor();
}

void Chat_rfdrRRRReply::SharedDtor() {
}

void Chat_rfdrRRRReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Chat_rfdrRRRReply& Chat_rfdrRRRReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Chat_rfdrRRRReply_Chat_2eproto.base);
  return *internal_default_instance();
}


void Chat_rfdrRRRReply::Clear() {
// @@protoc_insertion_point(message_clear_start:Chat_rfdrRRRReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Chat_rfdrRRRReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Chat_rfdrRRRReply::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Chat_rfdrRRRReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Chat_rfdrRRRReply)
  return target;
}

size_t Chat_rfdrRRRReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Chat_rfdrRRRReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Chat_rfdrRRRReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Chat_rfdrRRRReply)
  GOOGLE_DCHECK_NE(&from, this);
  const Chat_rfdrRRRReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Chat_rfdrRRRReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Chat_rfdrRRRReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Chat_rfdrRRRReply)
    MergeFrom(*source);
  }
}

void Chat_rfdrRRRReply::MergeFrom(const Chat_rfdrRRRReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Chat_rfdrRRRReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Chat_rfdrRRRReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Chat_rfdrRRRReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Chat_rfdrRRRReply::CopyFrom(const Chat_rfdrRRRReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Chat_rfdrRRRReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chat_rfdrRRRReply::IsInitialized() const {
  return true;
}

void Chat_rfdrRRRReply::InternalSwap(Chat_rfdrRRRReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Chat_rfdrRRRReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Chat_rfdrRRRReq* Arena::CreateMaybeMessage< ::Chat_rfdrRRRReq >(Arena* arena) {
  return Arena::CreateInternal< ::Chat_rfdrRRRReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Chat_rfdrRRRReply* Arena::CreateMaybeMessage< ::Chat_rfdrRRRReply >(Arena* arena) {
  return Arena::CreateInternal< ::Chat_rfdrRRRReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
